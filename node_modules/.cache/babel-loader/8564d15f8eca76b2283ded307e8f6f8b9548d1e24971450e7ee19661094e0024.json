{"ast":null,"code":"var _jsxFileName = \"/Users/maski/Documents/WebPeoject/Project02-01/clever-climb/src/Layout/views/Problems/Problems.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Problem from '../../components/Problem/Problem';\nimport './Problems.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction sortTableByQuestionCount() {\n  let table = document.getElementById(\"problemsTable\");\n  let rows = Array.from(table.rows).slice(1);\n  rows.sort((a, b) => {\n    let questiosA = parseInt(a.cells[3].innerText);\n    let questionsB = parseInt(b.cells[3].innerText);\n    return questionsB - questiosA;\n  });\n  let tbody = table.tBodies[0];\n  tbody.append(...rows);\n}\nconst Problems = () => {\n  _s();\n  const [problems, setProblems] = useState([]);\n  useEffect(() => {\n    // console.log(\"Loading Data ...\")\n    sortTableByQuestionCount();\n    fetch(\"http://localhost:8081/problems\").then(response => response.json()).then(data => setProblems(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Problems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"problemsTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Difficulty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Solved #\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: problems.map(problem => {\n            return /*#__PURE__*/_jsxDEV(Problem, {\n              title: problem.title,\n              difficulty: problem.difficulty,\n              solved: problem.solved,\n              category: problem.category,\n              content: problem.content,\n              option_1: problem.option_1,\n              option_2: problem.option_2,\n              option_3: problem.option_3,\n              option_4: problem.option_4\n            }, problem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Problems, \"VBi59e6jMrp0EO3shHKvwMVAqws=\");\n_c = Problems;\nexport default Problems;\n\n// #TODO\nvar _c;\n$RefreshReg$(_c, \"Problems\");","map":{"version":3,"names":["React","useState","useEffect","Problem","jsxDEV","_jsxDEV","sortTableByQuestionCount","table","document","getElementById","rows","Array","from","slice","sort","a","b","questiosA","parseInt","cells","innerText","questionsB","tbody","tBodies","append","Problems","_s","problems","setProblems","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","problem","title","difficulty","solved","category","content","option_1","option_2","option_3","option_4","_c","$RefreshReg$"],"sources":["/Users/maski/Documents/WebPeoject/Project02-01/clever-climb/src/Layout/views/Problems/Problems.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\nimport Problem from '../../components/Problem/Problem';\nimport './Problems.css';\n\nfunction sortTableByQuestionCount() {\n    let table = document.getElementById(\"problemsTable\");\n    let rows = Array.from(table.rows).slice(1); \n\n    rows.sort((a, b) => {\n        let questiosA = parseInt(a.cells[3].innerText);\n        let questionsB = parseInt(b.cells[3].innerText);\n        return questionsB - questiosA; \n    });\n\n    let tbody = table.tBodies[0];\n    tbody.append(...rows);\n}\n\nconst Problems = () => {\n    const [problems, setProblems] = useState([]);\n\n    useEffect(()=>{\n        // console.log(\"Loading Data ...\")\n        sortTableByQuestionCount();\n        fetch(\"http://localhost:8081/problems\")\n            .then(response=>response.json())\n            .then(data=>setProblems(data))\n    },)\n\n    return (\n        <div>\n            <main>\n                <h1>All Problems</h1>\n                <table id=\"problemsTable\">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Content</th>\n                            <th>Difficulty</th>\n                            <th>Solved #</th>\n                            <th>Category</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        problems.map((problem)=>{\n                            return <Problem key={problem.id} title={problem.title} difficulty={problem.difficulty} solved={problem.solved} category={problem.category} content={problem.content} option_1={problem.option_1} option_2={problem.option_2} option_3={problem.option_3} option_4={problem.option_4}/>\n                        })\n                        }\n                    </tbody>\n                </table>\n            </main>\n        </div>\n\n    );\n}\n\nexport default Problems;\n\n// #TODO"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,wBAAwBA,CAAA,EAAG;EAChC,IAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;EACpD,IAAIC,IAAI,GAAGC,KAAK,CAACC,IAAI,CAACL,KAAK,CAACG,IAAI,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;EAE1CH,IAAI,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IAChB,IAAIC,SAAS,GAAGC,QAAQ,CAACH,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC;IAC9C,IAAIC,UAAU,GAAGH,QAAQ,CAACF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC;IAC/C,OAAOC,UAAU,GAAGJ,SAAS;EACjC,CAAC,CAAC;EAEF,IAAIK,KAAK,GAAGf,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC;EAC5BD,KAAK,CAACE,MAAM,CAAC,GAAGd,IAAI,CAAC;AACzB;AAEA,MAAMe,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAI;IACV;IACAI,wBAAwB,CAAC,CAAC;IAC1BuB,KAAK,CAAC,gCAAgC,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACG,IAAI,IAAEL,WAAW,CAACK,IAAI,CAAC,CAAC;EACtC,CAAE,CAAC;EAEH,oBACI5B,OAAA;IAAA6B,QAAA,eACI7B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QAAA6B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBjC,OAAA;QAAOkC,EAAE,EAAC,eAAe;QAAAL,QAAA,gBACrB7B,OAAA;UAAA6B,QAAA,eACI7B,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdjC,OAAA;cAAA6B,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBjC,OAAA;cAAA6B,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBjC,OAAA;cAAA6B,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBjC,OAAA;cAAA6B,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRjC,OAAA;UAAA6B,QAAA,EAEIP,QAAQ,CAACa,GAAG,CAAEC,OAAO,IAAG;YACpB,oBAAOpC,OAAA,CAACF,OAAO;cAAkBuC,KAAK,EAAED,OAAO,CAACC,KAAM;cAACC,UAAU,EAAEF,OAAO,CAACE,UAAW;cAACC,MAAM,EAAEH,OAAO,CAACG,MAAO;cAACC,QAAQ,EAAEJ,OAAO,CAACI,QAAS;cAACC,OAAO,EAAEL,OAAO,CAACK,OAAQ;cAACC,QAAQ,EAAEN,OAAO,CAACM,QAAS;cAACC,QAAQ,EAAEP,OAAO,CAACO,QAAS;cAACC,QAAQ,EAAER,OAAO,CAACQ,QAAS;cAACC,QAAQ,EAAET,OAAO,CAACS;YAAS,GAA/PT,OAAO,CAACF,EAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAsP,CAAC;UAC1R,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd,CAAC;AAAAZ,EAAA,CArCKD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAuCd,eAAeA,QAAQ;;AAEvB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}